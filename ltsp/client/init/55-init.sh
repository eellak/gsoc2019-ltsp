# This file is part of LTSP, https://ltsp.github.io
# Copyright 2019 the LTSP team, see AUTHORS
# SPDX-License-Identifier: GPL-3.0-or-later

# Override /sbin/init to run some LTSP code, then restore the real init

init_cmdline() {
    warn "This is init-ltsp $*, type exit to continue booting"
    run_main_functions "$_SCRIPTS" "$@"
    # initrd-bottom may have renamed the real init
    if [ -f /sbin/init.real ]; then
        rm /sbin/init
        mv /sbin/init.real /sbin/init
    fi
    if ! mount | grep -qw dev; then
        echo ========NODEV========
        openvt -c 5 bash
    fi
    debug_shell
    exec /sbin/init
}

init_main() {
    local service

    test -e "/etc/fstab" &&
        printf "# Empty fstab generated by LTSP.\n" > "/etc/fstab"
    # Use loglevel from /proc/cmdline instead of resetting it
    if grep -qsw netconsole /proc/cmdline; then
        rw rm -f "/etc/sysctl.d/10-console-messages.conf"
    fi
    rm -rf /run/netplan /etc/netplan /lib/systemd/system-generators/netplan
    test -f "/usr/lib/tmpfiles.d/systemd.conf" &&
        rw sed "s|^[aA]|# &|" -i "/usr/lib/tmpfiles.d/systemd.conf"
    # Silence dmesg: Failed to open system journal: Operation not supported
    # Cap journal to 1M TODO make it configurable
    test -f "/etc/systemd/journald.conf" &&
        rw sed -e "s|[^[alpha]]*Storage=.*|Storage=volatile|" \
            -e "s|[^[alpha]]*RuntimeMaxUse=.*|RuntimeMaxUse=1M|" \
            -e "s|[^[alpha]]*ForwardToSyslog=.*|ForwardToSyslog=no|" \
            -i "/etc/systemd/journald.conf"
    test -f "/etc/systemd/system.conf" &&
        rw sed "s|[^[alpha]]*DefaultTimeoutStopSec=.*|DefaultTimeoutStopSec=10s|" \
            -i "/etc/systemd/system.conf"
    test -f "/etc/systemd/user.conf" &&
        rw sed "s|[^[alpha]]*DefaultTimeoutStopSec=.*|DefaultTimeoutStopSec=10s|" \
            -i "/etc/systemd/user.conf"
    for service in apt-daily.service apt-daily-upgrade.service snapd.seeded.service rsyslog.service; do
        rw ln -s /dev/null "/etc/systemd/system/$service"
    done
    # Disable autologin on gdm3
    if grep -qsw AutomaticLoginEnable /etc/gdm3/daemon.conf; then
        sed 's|^AutomaticLoginEnable\b.*=.*rue|AutomaticLoginEnable=False|' \
            -i /etc/gdm3/daemon.conf
    fi
    # TODO: or this; both are fast: rw systemctl mask --quiet --root=/ --no-reload apt-daily.service apt-daily-upgrade.service snapd.seeded.service rsyslog.service
    rw rm -f "/etc/init.d/shared-folders"
    rw rm -f "/etc/cron.daily/mlocate"
    rw rm -f "/var/crash/"*
    rw rm -f "/etc/resolv.conf"
    echo "nameserver 194.63.238.4" > "/etc/resolv.conf"
    rw sed 's|^root:[^:]*:|root:$6$bKP3Tahd$a06Zq1j.0eKswsZwmM7Ga76tKNCnueSC.6UhpZ4AFbduHqWA8nA5V/8pLHYFC4SrWdyaDGCgHeApMRNb7mwTq0:|' -i "/etc/passwd"
    # TODO: pwmerge won't work with LANG=C or unset; maybe ensure a default
    # LANG=C.UTF-8 if it's unset for all scripts
    export LANG=${LANG:-C.UTF-8}
    re /usr/share/ltsp/client/login/pwmerge -lq /usr/share/ltsp/client/login/_.git/src /etc /etc
    rw sed "s|\bserver\b|replaced-server|g" -i /etc/hosts
    printf "10.161.254.11\tserver\n" >> /etc/hosts
    # TODO: remove: disable autologin
    rw rm -f /etc/lightdm/lightdm.conf
    rw setupcon
    # TODO: remove: create some test users to see how DMs handle them
    blank=$(python3 -c 'import crypt; print(crypt.crypt(""))')
    printf '1\n1\n' | adduser --gecos '' b; usermod -p "$blank" b
    printf '1\n1\n' | adduser --gecos '' l; passwd -l l
    printf '1\n1\n' | adduser --gecos '' np; passwd -d np
    printf '1\n1\n' | adduser --gecos '' p
    #NFS_HOME=1
    if [ -n "$NFS_HOME" ]; then
        rw /usr/lib/klibc/bin/nfsmount 10.161.254.11:/var/rw/home "/home"
    else
        # SSHFS and DM logins tested on:
        # bionic-mate-sch32 bionic-minimal bionic-ubuntu buster-gnome
        # jessie-mate (slow) stretch-mate-sch (too-slow. oh; networking/lack of internet?!)
        # lubuntu-18.04.1-desktop-i386.iso kubuntu-18.04.1-desktop-amd64.iso
        if [ ! -x /usr/bin/sshfs ]; then
            # debian live doesn't have wget
            rw busybox wget "https://github.com/ltsp/binaries/releases/latest/download/sshfs-$(uname -m)" -O /usr/bin/sshfs
            rw chmod +x /usr/bin/sshfs
        fi
    fi
    echo ========================
    mount
    free
    uname -a
    echo ========================
}

patch_networking() {
    # TODO: this is initramfs-tools specific
    grep -Eqw 'root=/dev/nbd.*|root=/dev/nfs' /proc/cmdline || return 0
    . /run/net-*.conf
    # prohibit network-manager from messing with the boot interface
    printf "%s" "[keyfile]
unmanaged-devices=interface-name:$DEVICE
" > "$rootmnt/etc/NetworkManager/conf.d/ltsp.conf"
    printf "%s" "# Dynamically generated by LTSP.
auto lo
iface lo inet loopback

auto $DEVICE
iface $DEVICE inet manual
" > "$rootmnt/etc/network/interfaces"
    # Never ifdown anything. Safer! :P
    ln -sf ../bin/true "$rootmnt/sbin/ifdown"
}

patch_root() {
    if grep -qs 'AutomaticLoginEnable.*=' "$rootmnt/etc/gdm3/daemon.conf"; then
        sed -e 's/.*AutomaticLoginEnable[ ]*=.*/AutomaticLoginEnable = True/' \
            -e 's/.*AutomaticLogin[ ]*=.*/AutomaticLogin = administrator/' \
            -i "$rootmnt/etc/gdm3/daemon.conf"
    fi
    # Test automatic reboots, for stability!
    printf '#!/bin/sh
echo "This is RC LOCAL!" >&2
echo "This is RC LOCAL!"
# sleep 30  #  Cups does not like quick reboots and delays
# Systemd unit "Make remote CUPS printers available locally",
# sometimes needs 25 secs on NBD, 60 on NFS, with timeout=90
# reboot
' > "$rootmnt/etc/rc.local"
    chmod +x "$rootmnt/etc/rc.local"
}
