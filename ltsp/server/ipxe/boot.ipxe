#!ipxe
# This file is part of LTSP, https://ltsp.github.io
# Copyright 2019 the LTSP team, see AUTHORS
# SPDX-License-Identifier: GPL-3.0-or-later

# Generated by `ltsp config ipxe`, see `man ltsp config`.
# iPXE configuration file.
## Search for and read all the important lines that start with ##

set menu-timeout 1000
# Set the menu default based on arch, or to root-path if it's not empty
cpuid --ext 29 && set img x86_64 || set img x86_32
isset ${root-path} && set img ${root-path} ||
isset ${proxydhcp/dhcp-server} && set srv ${proxydhcp/dhcp-server} || set srv ${next-server}

## Define per-client settings in sections similar to the following example:
goto ${mac} || goto start

:52:54:00:8f:74:ad
set hostname thino
#set img nbd3
set cmdline_extra nolapic
goto start

:52:54:00:25:e3:37
set hostname fatso
set img vbox_vm
goto start

:3c:07:71:a2:02:e3
set hostname vaio
set img vbox_vm
goto start

:start
## To hide the whole menu, uncomment the next line:
# goto menu_end
## To hide only some menu items, comment their lines here:
menu iPXE boot menu - ${hostname}:${srv}:${root-path} || goto ${img}
item --gap              Operating systems:
item --key 1 vbox_vm    Some VirtualBox VM
item --key 2 x86_32     Ubuntu Mate 18.04 LTSP (x86_32)
item --key 3 x86_64     Ubuntu Mate 18.04 LTSP (x86_64)
item --key 4 livecd     Some Ubuntu Live CD
item --key 5 netinst    Ubuntu network installer
item
item --gap              Advanced options:
item --key m memtest    Memory test
item --key 9 W98SeEl    Windows 98 boot disk with Norton Ghost
item --key n netboot    Chain to boot.netboot.xyz
item --key p pxelinux   Chain to PXELinux
item --key c config     Enter iPXE configuration
item --key s shell      Drop to iPXE shell
item --key d disk       Boot from the first local disk
item
item --key x exit       Exit iPXE and continue BIOS boot
choose --timeout ${menu-timeout} --default ${img} img || goto cancel
:menu_end

## We set the default Linux cmdline here, right after ${img} was selected.
# For appropriate cmdlines for NFS, AoE, dracut etc, see `man ltsp config`.
# set cmdline ${cmdline_extra} BOOTIF=01-${mac:hexhyp} root=/dev/nfs nfsroot=${srv}:/opt/ltsp/images ltsploop=${img}.img init=/sbin/init-ltsp
set cmdline ${cmdline_extra} BOOTIF=01-${mac:hexhyp} root=/dev/nbd0p1 nbdroot=${srv}:/opt/ltsp/${img} ip=${ip}:${srv}:${gateway}:${netmask} init=/sbin/init-ltsp
goto ${img}

# While developing, I'm setting img and cmdline here; img can be:
# bionic-mate-sch32(14) bionic-mate-sch64(19) bionic-minimal(14) bionic-nfs(14)
# bionic-ubuntu(+19) buster-gnome(-24) fedora30 gentoo jessie-mate(+142!/27)
# stretch-mate-sch(+13) tara-cinnamon(-20) xenial-mate-sch(-9)

:vbox_vm
#bionic-mate-sch32 => kernel bug with vga=0x343, crashes in vbox, works in vaio that doesn't have that mode
set img bionic-mate-sch64
set nfs_chroot root=/dev/nfs nfsroot=${srv}:/srv/ltsp/${img}
set nfs_image root=/dev/nfs nfsroot=${srv}:/srv/ltsp/images ltsp.image=${img}.img
set nfs_my_image root=/dev/nfs nfsroot=${srv}:/srv/ltsp ltsp.image=images/${img}.img
set nfs_ubuntu_iso root=/dev/nfs nfsroot=${srv}:/srv/ltsp ltsp.image=images/${img}.img,,casper/filesystem.squashfs
set nfs_debian_live root=/dev/nfs nfsroot=${srv}:/srv/ltsp ltsp.image=images/${img}.img,,live/filesystem.squashfs
set nfs_liveusb root=/dev/nfs nfsroot=${srv}:/srv/ltsp ltsp.image=images/${img}.img,,liveusb/Ubuntu/ubuntu-mate-18.04.1-desktop-amd64.iso,,casper/filesystem.squashfs
set cmdline ${cmdline_extra} BOOTIF=01-${mac:hexhyp} ${nfs_my_image} loop.max_part=9 vga!=0x343 break!=init
kernel /ltsp/${img}/vmlinuz initrd=initrd.img initrd=ltsp.img ${cmdline}
initrd /ltsp/${img}/initrd.img
initrd /ltsp/ltsp.img
boot || goto failed

:x86_32
iseq ${platform} pcbios && goto linux_via_ipxe || goto linux_via_grub

:x86_64
goto linux_via_ipxe

:linux_via_ipxe
# This code covers all Linux images and architectures, except "linux_via_grub".
# In EFI mode, iPXE requires initrds to be specified in the cmdline.
kernel /ltsp/${img}/vmlinuz initrd=initrd.img initrd=ltsp.img ${cmdline}
initrd /ltsp/${img}/initrd.img
initrd /ltsp/ltsp.img
boot || goto failed

:linux_via_grub
# This now is an UEFI client booting a 32bit OS. iPXE can't handle that.
# But grub fails with proxyDHCP: https://savannah.gnu.org/bugs/index.php?55636
# Using both of them works fine!
# To simplify grub.cfg, we pass root-path=${cmdline} and filename=${initrd}
set net0/dhcp-server ${srv}
set net0/next-server ${srv}
set net0/root-path /ltsp/${img}/vmlinuz ${cmdline}
set net0/filename /ltsp/${img}/initrd.img /ltsp/ltsp.img
kernel /grub/grubnetx64.efi.signed
boot || goto failed

:livecd  # https://bugs.launchpad.net/ubuntu/+source/systemd/+bug/1755863
initrd /images/cdrom/preseed/ubuntu.seed && set seed ubuntu && goto livecd_seed ||
initrd /images/cdrom/preseed/ubuntu-mate.seed && set seed ubuntu-mate && goto livecd_seed ||
initrd /images/cdrom/preseed/kubuntu.seed && set seed kubuntu && goto livecd_seed ||
initrd /images/cdrom/preseed/lubuntu.seed && set seed lubuntu && goto livecd_seed ||
initrd /images/cdrom/preseed/xubuntu.seed && set seed xubuntu && goto livecd_seed ||
initrd /images/cdrom/preseed/linuxmint.seed && set seed linuxmint && goto livecd_seed ||
goto livecd_initrd
:livecd_seed
imgfree ${seed}.seed
set seedparam file=/cdrom/preseed/${seed}.seed
:livecd_initrd
initrd /images/cdrom/casper/initrd && set initrd initrd && goto livecd_kernel ||
initrd /images/cdrom/casper/initrd.lz && set initrd initrd.lz && goto livecd_kernel ||
initrd /images/cdrom/casper/initrd.gz && set initrd initrd.gz && goto livecd_kernel || goto failed
:livecd_kernel  # TODO: it might be xubuntu.seed etc
kernel /images/cdrom/casper/vmlinuz initrd=${initrd} initrd=ltsp.img boot=casper netboot=nfs nfsroot=10.161.254.11:/cdrom ${seedparam} -- debian-installer/language=el keyboard-configuration/layoutcode?=gr
#systemd.mask=tmp.mount
initrd /ltsp/ltsp.img
boot || goto failed

:netinst  # http://archive.ubuntu.com/ubuntu/dists/devel/main/installer-i386/current/images/netboot/ubuntu-installer/i386/boot-screens/txt.cfg
kernel http://archive.ubuntu.com/ubuntu/dists/devel/main/installer-i386/current/images/netboot/ubuntu-installer/i386/linux initrd=initrd.gz
initrd http://archive.ubuntu.com/ubuntu/dists/devel/main/installer-i386/current/images/netboot/ubuntu-installer/i386/initrd.gz
boot || goto failed

:memtest
iseq ${platform} pcbios && kernel memtest.0 || kernel memtest.efi
# Boot "fails" on normal memtest exit with Esc, so show the menu again
boot ||
goto start

:W98SeEl
#sanboot http://boot.ipxe.org/freedos/fdfullcd.iso
kernel /syslinux/bios/memdisk
initrd /images/W98SeEl.img
boot || goto failed

:netboot
chain --autofree http://boot.netboot.xyz || goto failed

:pxelinux
iseq ${platform} pcbios && set filename /syslinux/bios/lpxelinux.0 || set filename /syslinux/efi64/syslinux.efi
set pxebs/filename ${filename}  # For PXELinux to get its path
#set net0/filename ${filename}  # For PXELinux to get its path
#set proxydhcp/filename ${filename}  # For PXELinux to get its path
kernel ${filename}
boot || goto failed

:config
config
goto start

:shell
echo Type 'exit' to get the back to the menu
shell
goto start

:disk
# Boot the first local HDD
sanboot --no-describe --drive 0x80 || goto failed

:exit
# Exit with error, to fall back to the next boot option
# http://forum.ipxe.org/showthread.php?tid=6775
exit 1

:cancel
echo You cancelled the menu, dropping to shell
goto shell

:failed
echo Booting failed, dropping to shell
goto shell
